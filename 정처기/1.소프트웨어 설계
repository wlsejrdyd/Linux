가. 버림 (6)
# 스크럼기법,XP기법,개발기술환경파악,품질요구사항,소프트웨어아키텍처,아키텍처패턴,

나. SDLC (Software Development Life Cycle)
# 소프트웨어가 기획부터 폐기까지 거치는 모든 개발 과정을 체계적으로 정의한 절차를 소프트웨어 생명 주기라 한다

1). 폭포수 모형
1-1). 고전적 모형, 선형 순차적, 요구사항 변경어렵
+ 분설구테유
++ 분1석, 설1계, 구1현, 테1스트, 유1지보수

2). 프로토타입 모형
2-1). 최종 결과물 예측, 인터페이스 중점, 요구사항 변경쉬움

3). 나선형 모형
3-1). 프로토타입+위험분석 추가, 점진적, 정밀
+ 계위개고
++ 계1획, 위1험분석, 개1발, 고1객평가

4). 애자일 모형
4-1). 민첩/기민, 변화유연, 주기반복개발, 고객소통, 기능중심 개발
######################################################################################################################################

다. 요구사항 정의
# 소프트웨어가 충족해야 할 사용자 및 시스템 요구사항을 수집하고 문서화하는 과정

1). 개발 프로세스
+ 도분명확 / 추분명검
++ 도1출 / 추2출, 분1석 / 분2석, 명1세 / 명2세, 확1인 / 검2증

2). 분석 기법
+ 분개할협정
++ 분1류, 개1념, 할1당, 협1상, 정1형

3). 확인 기법
+ 검프모인
++ 검1토 , 프1로토파이핑 , 모1델 검증 , 인1수 테스트
######################################################################################################################################

라. UML (Unified Modeling Language)
# 소프트웨어 시스템의 설계와 구조를 시각적으로 모델링하기 위한 표준화되 언어이다

1). 구성 요소
+ 사관다
+ 사1물, 관1계, 다1이어그램

2). 행위, 동적 다이어그램
2-1). 유스케이스, 시퀀스, 커뮤니케이션, 상태, 활동, 상호작용, 타이밍
######################################################################################################################################

마. 사용자 인터페이스
# 사용자가 소프트웨어와 상호작용하는 화면 및 조작 요소를 의미

1). UI의 구분
1-1). CLI, GUI, NUI(행동), VUI(음성), OUI(사물)

2). 기본 원착
2-1). 쉽게이해(직1관), 완벽정확(유1효), 쉽게배워(학1습), 요구사항 최대수용(유1연)
+ 직유학유
######################################################################################################################################

바. 객체지향
# 소프트웨어를 독립적인 객체 단위로 나누어 설계하고 개발하는 방법

1). 객체
1-1). 자신의 속성을 가지고있으면서 식별이 가능한 것을 의미한다, 속성과 동작으로 구성 됨.

2). 클래스
2-1). 객체를 묶기위한 빵틀 같은거

######################################################################################################################################
######################################################################################################################################
######################################################################################################################################
######################################################################################################################################
######################################################################################################################################
######################################################################################################################################
